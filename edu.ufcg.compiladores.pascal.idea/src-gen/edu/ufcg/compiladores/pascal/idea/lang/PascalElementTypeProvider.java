/*
 * generated by Xtext 2.9.0
 */
package edu.ufcg.compiladores.pascal.idea.lang;

import com.intellij.psi.tree.IFileElementType;
import edu.ufcg.compiladores.pascal.idea.lang.psi.impl.PascalFileImpl;
import edu.ufcg.compiladores.pascal.services.PascalGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.idea.lang.IElementTypeProvider;
import org.eclipse.xtext.psi.stubs.XtextFileElementType;
import org.eclipse.xtext.psi.stubs.XtextFileStub;
import org.eclipse.xtext.psi.tree.IGrammarAwareElementType;

public class PascalElementTypeProvider implements IElementTypeProvider {

	public static final IFileElementType FILE_TYPE = new XtextFileElementType<XtextFileStub<PascalFileImpl>>(PascalLanguage.INSTANCE);

	private static final Map<EObject, IGrammarAwareElementType> GRAMMAR_ELEMENT_TYPE = new HashMap<EObject, IGrammarAwareElementType>();

	private static IGrammarAwareElementType associate(IGrammarAwareElementType grammarAwareElementType) {
		GRAMMAR_ELEMENT_TYPE.put(grammarAwareElementType.getGrammarElement(), grammarAwareElementType);
		return grammarAwareElementType;
	}

	private static final PascalGrammarAccess GRAMMAR_ACCESS = PascalLanguage.INSTANCE.getInstance(PascalGrammarAccess.class);

	private static class PascalFactory {
		public static IGrammarAwareElementType createPascalElementType() {
			return new IGrammarAwareElementType("Pascal_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalRule());
		}
		public static IGrammarAwareElementType createPascal_GroupElementType() {
			return new IGrammarAwareElementType("Pascal_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getGroup());
		}
		public static IGrammarAwareElementType createPascal_HeadAssignment_0ElementType() {
			return new IGrammarAwareElementType("Pascal_HeadAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getHeadAssignment_0());
		}
		public static IGrammarAwareElementType createPascal_HeadProgramParserRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Pascal_HeadProgramParserRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getHeadProgramParserRuleCall_0_0());
		}
		public static IGrammarAwareElementType createPascal_DeclarationsAssignment_1ElementType() {
			return new IGrammarAwareElementType("Pascal_DeclarationsAssignment_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getDeclarationsAssignment_1());
		}
		public static IGrammarAwareElementType createPascal_DeclarationsVar_blockParserRuleCall_1_0ElementType() {
			return new IGrammarAwareElementType("Pascal_DeclarationsVar_blockParserRuleCall_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getDeclarationsVar_blockParserRuleCall_1_0());
		}
		public static IGrammarAwareElementType createPascal_ScopeAssignment_2ElementType() {
			return new IGrammarAwareElementType("Pascal_ScopeAssignment_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getScopeAssignment_2());
		}
		public static IGrammarAwareElementType createPascal_ScopeBlockParserRuleCall_2_0ElementType() {
			return new IGrammarAwareElementType("Pascal_ScopeBlockParserRuleCall_2_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getPascalAccess().getScopeBlockParserRuleCall_2_0());
		}
	}

	public static final IGrammarAwareElementType Pascal_ELEMENT_TYPE = associate(PascalFactory.createPascalElementType());

	public static final IGrammarAwareElementType Pascal_Group_ELEMENT_TYPE = associate(PascalFactory.createPascal_GroupElementType());

	public static final IGrammarAwareElementType Pascal_HeadAssignment_0_ELEMENT_TYPE = associate(PascalFactory.createPascal_HeadAssignment_0ElementType());

	public static final IGrammarAwareElementType Pascal_HeadProgramParserRuleCall_0_0_ELEMENT_TYPE = associate(PascalFactory.createPascal_HeadProgramParserRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Pascal_DeclarationsAssignment_1_ELEMENT_TYPE = associate(PascalFactory.createPascal_DeclarationsAssignment_1ElementType());

	public static final IGrammarAwareElementType Pascal_DeclarationsVar_blockParserRuleCall_1_0_ELEMENT_TYPE = associate(PascalFactory.createPascal_DeclarationsVar_blockParserRuleCall_1_0ElementType());

	public static final IGrammarAwareElementType Pascal_ScopeAssignment_2_ELEMENT_TYPE = associate(PascalFactory.createPascal_ScopeAssignment_2ElementType());

	public static final IGrammarAwareElementType Pascal_ScopeBlockParserRuleCall_2_0_ELEMENT_TYPE = associate(PascalFactory.createPascal_ScopeBlockParserRuleCall_2_0ElementType());

	private static class ProgramFactory {
		public static IGrammarAwareElementType createProgramElementType() {
			return new IGrammarAwareElementType("Program_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getProgramRule());
		}
		public static IGrammarAwareElementType createProgram_GroupElementType() {
			return new IGrammarAwareElementType("Program_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getProgramAccess().getGroup());
		}
		public static IGrammarAwareElementType createProgram_ProgramKeyword_0ElementType() {
			return new IGrammarAwareElementType("Program_ProgramKeyword_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getProgramAccess().getProgramKeyword_0());
		}
		public static IGrammarAwareElementType createProgram_NameAssignment_1ElementType() {
			return new IGrammarAwareElementType("Program_NameAssignment_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getProgramAccess().getNameAssignment_1());
		}
		public static IGrammarAwareElementType createProgram_NameIDTerminalRuleCall_1_0ElementType() {
			return new IGrammarAwareElementType("Program_NameIDTerminalRuleCall_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getProgramAccess().getNameIDTerminalRuleCall_1_0());
		}
		public static IGrammarAwareElementType createProgram_SemicolonKeyword_2ElementType() {
			return new IGrammarAwareElementType("Program_SemicolonKeyword_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getProgramAccess().getSemicolonKeyword_2());
		}
	}

	public static final IGrammarAwareElementType Program_ELEMENT_TYPE = associate(ProgramFactory.createProgramElementType());

	public static final IGrammarAwareElementType Program_Group_ELEMENT_TYPE = associate(ProgramFactory.createProgram_GroupElementType());

	public static final IGrammarAwareElementType Program_ProgramKeyword_0_ELEMENT_TYPE = associate(ProgramFactory.createProgram_ProgramKeyword_0ElementType());

	public static final IGrammarAwareElementType Program_NameAssignment_1_ELEMENT_TYPE = associate(ProgramFactory.createProgram_NameAssignment_1ElementType());

	public static final IGrammarAwareElementType Program_NameIDTerminalRuleCall_1_0_ELEMENT_TYPE = associate(ProgramFactory.createProgram_NameIDTerminalRuleCall_1_0ElementType());

	public static final IGrammarAwareElementType Program_SemicolonKeyword_2_ELEMENT_TYPE = associate(ProgramFactory.createProgram_SemicolonKeyword_2ElementType());

	private static class Var_blockFactory {
		public static IGrammarAwareElementType createVar_blockElementType() {
			return new IGrammarAwareElementType("Var_block_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockRule());
		}
		public static IGrammarAwareElementType createVar_block_GroupElementType() {
			return new IGrammarAwareElementType("Var_block_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getGroup());
		}
		public static IGrammarAwareElementType createVar_block_VarKeyword_0ElementType() {
			return new IGrammarAwareElementType("Var_block_VarKeyword_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getVarKeyword_0());
		}
		public static IGrammarAwareElementType createVar_block_Alternatives_1ElementType() {
			return new IGrammarAwareElementType("Var_block_Alternatives_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getAlternatives_1());
		}
		public static IGrammarAwareElementType createVar_block_Var_statementsAssignment_1_0ElementType() {
			return new IGrammarAwareElementType("Var_block_Var_statementsAssignment_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getVar_statementsAssignment_1_0());
		}
		public static IGrammarAwareElementType createVar_block_Var_statementsVar_declParserRuleCall_1_0_0ElementType() {
			return new IGrammarAwareElementType("Var_block_Var_statementsVar_declParserRuleCall_1_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getVar_statementsVar_declParserRuleCall_1_0_0());
		}
		public static IGrammarAwareElementType createVar_block_Var_statementsAssignment_1_1ElementType() {
			return new IGrammarAwareElementType("Var_block_Var_statementsAssignment_1_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getVar_statementsAssignment_1_1());
		}
		public static IGrammarAwareElementType createVar_block_Var_statementsVar_listParserRuleCall_1_1_0ElementType() {
			return new IGrammarAwareElementType("Var_block_Var_statementsVar_listParserRuleCall_1_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_blockAccess().getVar_statementsVar_listParserRuleCall_1_1_0());
		}
	}

	public static final IGrammarAwareElementType Var_block_ELEMENT_TYPE = associate(Var_blockFactory.createVar_blockElementType());

	public static final IGrammarAwareElementType Var_block_Group_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_GroupElementType());

	public static final IGrammarAwareElementType Var_block_VarKeyword_0_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_VarKeyword_0ElementType());

	public static final IGrammarAwareElementType Var_block_Alternatives_1_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_Alternatives_1ElementType());

	public static final IGrammarAwareElementType Var_block_Var_statementsAssignment_1_0_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_Var_statementsAssignment_1_0ElementType());

	public static final IGrammarAwareElementType Var_block_Var_statementsVar_declParserRuleCall_1_0_0_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_Var_statementsVar_declParserRuleCall_1_0_0ElementType());

	public static final IGrammarAwareElementType Var_block_Var_statementsAssignment_1_1_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_Var_statementsAssignment_1_1ElementType());

	public static final IGrammarAwareElementType Var_block_Var_statementsVar_listParserRuleCall_1_1_0_ELEMENT_TYPE = associate(Var_blockFactory.createVar_block_Var_statementsVar_listParserRuleCall_1_1_0ElementType());

	private static class Var_declFactory {
		public static IGrammarAwareElementType createVar_declElementType() {
			return new IGrammarAwareElementType("Var_decl_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declRule());
		}
		public static IGrammarAwareElementType createVar_decl_GroupElementType() {
			return new IGrammarAwareElementType("Var_decl_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getGroup());
		}
		public static IGrammarAwareElementType createVar_decl_Var_idAssignment_0ElementType() {
			return new IGrammarAwareElementType("Var_decl_Var_idAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getVar_idAssignment_0());
		}
		public static IGrammarAwareElementType createVar_decl_Var_idIDTerminalRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Var_decl_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getVar_idIDTerminalRuleCall_0_0());
		}
		public static IGrammarAwareElementType createVar_decl_ColonKeyword_1ElementType() {
			return new IGrammarAwareElementType("Var_decl_ColonKeyword_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getColonKeyword_1());
		}
		public static IGrammarAwareElementType createVar_decl_Var_typeAssignment_2ElementType() {
			return new IGrammarAwareElementType("Var_decl_Var_typeAssignment_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getVar_typeAssignment_2());
		}
		public static IGrammarAwareElementType createVar_decl_Var_typeTypeEnumRuleCall_2_0ElementType() {
			return new IGrammarAwareElementType("Var_decl_Var_typeTypeEnumRuleCall_2_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getVar_typeTypeEnumRuleCall_2_0());
		}
		public static IGrammarAwareElementType createVar_decl_Group_3ElementType() {
			return new IGrammarAwareElementType("Var_decl_Group_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getGroup_3());
		}
		public static IGrammarAwareElementType createVar_decl_EqualsSignKeyword_3_0ElementType() {
			return new IGrammarAwareElementType("Var_decl_EqualsSignKeyword_3_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getEqualsSignKeyword_3_0());
		}
		public static IGrammarAwareElementType createVar_decl_ValueAssignment_3_1ElementType() {
			return new IGrammarAwareElementType("Var_decl_ValueAssignment_3_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getValueAssignment_3_1());
		}
		public static IGrammarAwareElementType createVar_decl_ValueSome_valueParserRuleCall_3_1_0ElementType() {
			return new IGrammarAwareElementType("Var_decl_ValueSome_valueParserRuleCall_3_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getValueSome_valueParserRuleCall_3_1_0());
		}
		public static IGrammarAwareElementType createVar_decl_SemicolonKeyword_4ElementType() {
			return new IGrammarAwareElementType("Var_decl_SemicolonKeyword_4_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_declAccess().getSemicolonKeyword_4());
		}
	}

	public static final IGrammarAwareElementType Var_decl_ELEMENT_TYPE = associate(Var_declFactory.createVar_declElementType());

	public static final IGrammarAwareElementType Var_decl_Group_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_GroupElementType());

	public static final IGrammarAwareElementType Var_decl_Var_idAssignment_0_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_Var_idAssignment_0ElementType());

	public static final IGrammarAwareElementType Var_decl_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_Var_idIDTerminalRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Var_decl_ColonKeyword_1_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_ColonKeyword_1ElementType());

	public static final IGrammarAwareElementType Var_decl_Var_typeAssignment_2_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_Var_typeAssignment_2ElementType());

	public static final IGrammarAwareElementType Var_decl_Var_typeTypeEnumRuleCall_2_0_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_Var_typeTypeEnumRuleCall_2_0ElementType());

	public static final IGrammarAwareElementType Var_decl_Group_3_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_Group_3ElementType());

	public static final IGrammarAwareElementType Var_decl_EqualsSignKeyword_3_0_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_EqualsSignKeyword_3_0ElementType());

	public static final IGrammarAwareElementType Var_decl_ValueAssignment_3_1_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_ValueAssignment_3_1ElementType());

	public static final IGrammarAwareElementType Var_decl_ValueSome_valueParserRuleCall_3_1_0_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_ValueSome_valueParserRuleCall_3_1_0ElementType());

	public static final IGrammarAwareElementType Var_decl_SemicolonKeyword_4_ELEMENT_TYPE = associate(Var_declFactory.createVar_decl_SemicolonKeyword_4ElementType());

	private static class Var_listFactory {
		public static IGrammarAwareElementType createVar_listElementType() {
			return new IGrammarAwareElementType("Var_list_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listRule());
		}
		public static IGrammarAwareElementType createVar_list_GroupElementType() {
			return new IGrammarAwareElementType("Var_list_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getGroup());
		}
		public static IGrammarAwareElementType createVar_list_Var_idAssignment_0ElementType() {
			return new IGrammarAwareElementType("Var_list_Var_idAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getVar_idAssignment_0());
		}
		public static IGrammarAwareElementType createVar_list_Var_idIDTerminalRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Var_list_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getVar_idIDTerminalRuleCall_0_0());
		}
		public static IGrammarAwareElementType createVar_list_Group_1ElementType() {
			return new IGrammarAwareElementType("Var_list_Group_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getGroup_1());
		}
		public static IGrammarAwareElementType createVar_list_CommaKeyword_1_0ElementType() {
			return new IGrammarAwareElementType("Var_list_CommaKeyword_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getCommaKeyword_1_0());
		}
		public static IGrammarAwareElementType createVar_list_Var_idsAssignment_1_1ElementType() {
			return new IGrammarAwareElementType("Var_list_Var_idsAssignment_1_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getVar_idsAssignment_1_1());
		}
		public static IGrammarAwareElementType createVar_list_Var_idsIDTerminalRuleCall_1_1_0ElementType() {
			return new IGrammarAwareElementType("Var_list_Var_idsIDTerminalRuleCall_1_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getVar_idsIDTerminalRuleCall_1_1_0());
		}
		public static IGrammarAwareElementType createVar_list_ColonKeyword_2ElementType() {
			return new IGrammarAwareElementType("Var_list_ColonKeyword_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getColonKeyword_2());
		}
		public static IGrammarAwareElementType createVar_list_Var_typeAssignment_3ElementType() {
			return new IGrammarAwareElementType("Var_list_Var_typeAssignment_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getVar_typeAssignment_3());
		}
		public static IGrammarAwareElementType createVar_list_Var_typeTypeEnumRuleCall_3_0ElementType() {
			return new IGrammarAwareElementType("Var_list_Var_typeTypeEnumRuleCall_3_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getVar_typeTypeEnumRuleCall_3_0());
		}
		public static IGrammarAwareElementType createVar_list_SemicolonKeyword_4ElementType() {
			return new IGrammarAwareElementType("Var_list_SemicolonKeyword_4_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getVar_listAccess().getSemicolonKeyword_4());
		}
	}

	public static final IGrammarAwareElementType Var_list_ELEMENT_TYPE = associate(Var_listFactory.createVar_listElementType());

	public static final IGrammarAwareElementType Var_list_Group_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_GroupElementType());

	public static final IGrammarAwareElementType Var_list_Var_idAssignment_0_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Var_idAssignment_0ElementType());

	public static final IGrammarAwareElementType Var_list_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Var_idIDTerminalRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Var_list_Group_1_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Group_1ElementType());

	public static final IGrammarAwareElementType Var_list_CommaKeyword_1_0_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_CommaKeyword_1_0ElementType());

	public static final IGrammarAwareElementType Var_list_Var_idsAssignment_1_1_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Var_idsAssignment_1_1ElementType());

	public static final IGrammarAwareElementType Var_list_Var_idsIDTerminalRuleCall_1_1_0_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Var_idsIDTerminalRuleCall_1_1_0ElementType());

	public static final IGrammarAwareElementType Var_list_ColonKeyword_2_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_ColonKeyword_2ElementType());

	public static final IGrammarAwareElementType Var_list_Var_typeAssignment_3_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Var_typeAssignment_3ElementType());

	public static final IGrammarAwareElementType Var_list_Var_typeTypeEnumRuleCall_3_0_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_Var_typeTypeEnumRuleCall_3_0ElementType());

	public static final IGrammarAwareElementType Var_list_SemicolonKeyword_4_ELEMENT_TYPE = associate(Var_listFactory.createVar_list_SemicolonKeyword_4ElementType());

	private static class TypeFactory {
		public static IGrammarAwareElementType createTypeElementType() {
			return new IGrammarAwareElementType("Type_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeRule());
		}
		public static IGrammarAwareElementType createType_AlternativesElementType() {
			return new IGrammarAwareElementType("Type_Alternatives_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getAlternatives());
		}
		public static IGrammarAwareElementType createType_BOOLEANEnumLiteralDeclaration_0ElementType() {
			return new IGrammarAwareElementType("Type_BOOLEANEnumLiteralDeclaration_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getBOOLEANEnumLiteralDeclaration_0());
		}
		public static IGrammarAwareElementType createType_BOOLEANBooleanKeyword_0_0ElementType() {
			return new IGrammarAwareElementType("Type_BOOLEANBooleanKeyword_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getBOOLEANBooleanKeyword_0_0());
		}
		public static IGrammarAwareElementType createType_INTEGEREnumLiteralDeclaration_1ElementType() {
			return new IGrammarAwareElementType("Type_INTEGEREnumLiteralDeclaration_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getINTEGEREnumLiteralDeclaration_1());
		}
		public static IGrammarAwareElementType createType_INTEGERIntegerKeyword_1_0ElementType() {
			return new IGrammarAwareElementType("Type_INTEGERIntegerKeyword_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getINTEGERIntegerKeyword_1_0());
		}
		public static IGrammarAwareElementType createType_STRINGEnumLiteralDeclaration_2ElementType() {
			return new IGrammarAwareElementType("Type_STRINGEnumLiteralDeclaration_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getSTRINGEnumLiteralDeclaration_2());
		}
		public static IGrammarAwareElementType createType_STRINGStringKeyword_2_0ElementType() {
			return new IGrammarAwareElementType("Type_STRINGStringKeyword_2_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getTypeAccess().getSTRINGStringKeyword_2_0());
		}
	}

	public static final IGrammarAwareElementType Type_ELEMENT_TYPE = associate(TypeFactory.createTypeElementType());

	public static final IGrammarAwareElementType Type_Alternatives_ELEMENT_TYPE = associate(TypeFactory.createType_AlternativesElementType());

	public static final IGrammarAwareElementType Type_BOOLEANEnumLiteralDeclaration_0_ELEMENT_TYPE = associate(TypeFactory.createType_BOOLEANEnumLiteralDeclaration_0ElementType());

	public static final IGrammarAwareElementType Type_BOOLEANBooleanKeyword_0_0_ELEMENT_TYPE = associate(TypeFactory.createType_BOOLEANBooleanKeyword_0_0ElementType());

	public static final IGrammarAwareElementType Type_INTEGEREnumLiteralDeclaration_1_ELEMENT_TYPE = associate(TypeFactory.createType_INTEGEREnumLiteralDeclaration_1ElementType());

	public static final IGrammarAwareElementType Type_INTEGERIntegerKeyword_1_0_ELEMENT_TYPE = associate(TypeFactory.createType_INTEGERIntegerKeyword_1_0ElementType());

	public static final IGrammarAwareElementType Type_STRINGEnumLiteralDeclaration_2_ELEMENT_TYPE = associate(TypeFactory.createType_STRINGEnumLiteralDeclaration_2ElementType());

	public static final IGrammarAwareElementType Type_STRINGStringKeyword_2_0_ELEMENT_TYPE = associate(TypeFactory.createType_STRINGStringKeyword_2_0ElementType());

	private static class BlockFactory {
		public static IGrammarAwareElementType createBlockElementType() {
			return new IGrammarAwareElementType("Block_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockRule());
		}
		public static IGrammarAwareElementType createBlock_GroupElementType() {
			return new IGrammarAwareElementType("Block_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockAccess().getGroup());
		}
		public static IGrammarAwareElementType createBlock_BeginKeyword_0ElementType() {
			return new IGrammarAwareElementType("Block_BeginKeyword_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockAccess().getBeginKeyword_0());
		}
		public static IGrammarAwareElementType createBlock_StatementsAssignment_1ElementType() {
			return new IGrammarAwareElementType("Block_StatementsAssignment_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockAccess().getStatementsAssignment_1());
		}
		public static IGrammarAwareElementType createBlock_StatementsStatementParserRuleCall_1_0ElementType() {
			return new IGrammarAwareElementType("Block_StatementsStatementParserRuleCall_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockAccess().getStatementsStatementParserRuleCall_1_0());
		}
		public static IGrammarAwareElementType createBlock_EndKeyword_2ElementType() {
			return new IGrammarAwareElementType("Block_EndKeyword_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockAccess().getEndKeyword_2());
		}
		public static IGrammarAwareElementType createBlock_FullStopKeyword_3ElementType() {
			return new IGrammarAwareElementType("Block_FullStopKeyword_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBlockAccess().getFullStopKeyword_3());
		}
	}

	public static final IGrammarAwareElementType Block_ELEMENT_TYPE = associate(BlockFactory.createBlockElementType());

	public static final IGrammarAwareElementType Block_Group_ELEMENT_TYPE = associate(BlockFactory.createBlock_GroupElementType());

	public static final IGrammarAwareElementType Block_BeginKeyword_0_ELEMENT_TYPE = associate(BlockFactory.createBlock_BeginKeyword_0ElementType());

	public static final IGrammarAwareElementType Block_StatementsAssignment_1_ELEMENT_TYPE = associate(BlockFactory.createBlock_StatementsAssignment_1ElementType());

	public static final IGrammarAwareElementType Block_StatementsStatementParserRuleCall_1_0_ELEMENT_TYPE = associate(BlockFactory.createBlock_StatementsStatementParserRuleCall_1_0ElementType());

	public static final IGrammarAwareElementType Block_EndKeyword_2_ELEMENT_TYPE = associate(BlockFactory.createBlock_EndKeyword_2ElementType());

	public static final IGrammarAwareElementType Block_FullStopKeyword_3_ELEMENT_TYPE = associate(BlockFactory.createBlock_FullStopKeyword_3ElementType());

	private static class StatementFactory {
		public static IGrammarAwareElementType createStatementElementType() {
			return new IGrammarAwareElementType("Statement_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getStatementRule());
		}
		public static IGrammarAwareElementType createStatement_Atrib_blockAssignmentElementType() {
			return new IGrammarAwareElementType("Statement_Atrib_blockAssignment_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getStatementAccess().getAtrib_blockAssignment());
		}
		public static IGrammarAwareElementType createStatement_Atrib_blockAtribParserRuleCall_0ElementType() {
			return new IGrammarAwareElementType("Statement_Atrib_blockAtribParserRuleCall_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getStatementAccess().getAtrib_blockAtribParserRuleCall_0());
		}
	}

	public static final IGrammarAwareElementType Statement_ELEMENT_TYPE = associate(StatementFactory.createStatementElementType());

	public static final IGrammarAwareElementType Statement_Atrib_blockAssignment_ELEMENT_TYPE = associate(StatementFactory.createStatement_Atrib_blockAssignmentElementType());

	public static final IGrammarAwareElementType Statement_Atrib_blockAtribParserRuleCall_0_ELEMENT_TYPE = associate(StatementFactory.createStatement_Atrib_blockAtribParserRuleCall_0ElementType());

	private static class AtribFactory {
		public static IGrammarAwareElementType createAtribElementType() {
			return new IGrammarAwareElementType("Atrib_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribRule());
		}
		public static IGrammarAwareElementType createAtrib_GroupElementType() {
			return new IGrammarAwareElementType("Atrib_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getGroup());
		}
		public static IGrammarAwareElementType createAtrib_Var_idAssignment_0ElementType() {
			return new IGrammarAwareElementType("Atrib_Var_idAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getVar_idAssignment_0());
		}
		public static IGrammarAwareElementType createAtrib_Var_idIDTerminalRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Atrib_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getVar_idIDTerminalRuleCall_0_0());
		}
		public static IGrammarAwareElementType createAtrib_ColonEqualsSignKeyword_1ElementType() {
			return new IGrammarAwareElementType("Atrib_ColonEqualsSignKeyword_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getColonEqualsSignKeyword_1());
		}
		public static IGrammarAwareElementType createAtrib_ExpAssignment_2ElementType() {
			return new IGrammarAwareElementType("Atrib_ExpAssignment_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getExpAssignment_2());
		}
		public static IGrammarAwareElementType createAtrib_ExpExpressionParserRuleCall_2_0ElementType() {
			return new IGrammarAwareElementType("Atrib_ExpExpressionParserRuleCall_2_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getExpExpressionParserRuleCall_2_0());
		}
		public static IGrammarAwareElementType createAtrib_SemicolonKeyword_3ElementType() {
			return new IGrammarAwareElementType("Atrib_SemicolonKeyword_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getAtribAccess().getSemicolonKeyword_3());
		}
	}

	public static final IGrammarAwareElementType Atrib_ELEMENT_TYPE = associate(AtribFactory.createAtribElementType());

	public static final IGrammarAwareElementType Atrib_Group_ELEMENT_TYPE = associate(AtribFactory.createAtrib_GroupElementType());

	public static final IGrammarAwareElementType Atrib_Var_idAssignment_0_ELEMENT_TYPE = associate(AtribFactory.createAtrib_Var_idAssignment_0ElementType());

	public static final IGrammarAwareElementType Atrib_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE = associate(AtribFactory.createAtrib_Var_idIDTerminalRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Atrib_ColonEqualsSignKeyword_1_ELEMENT_TYPE = associate(AtribFactory.createAtrib_ColonEqualsSignKeyword_1ElementType());

	public static final IGrammarAwareElementType Atrib_ExpAssignment_2_ELEMENT_TYPE = associate(AtribFactory.createAtrib_ExpAssignment_2ElementType());

	public static final IGrammarAwareElementType Atrib_ExpExpressionParserRuleCall_2_0_ELEMENT_TYPE = associate(AtribFactory.createAtrib_ExpExpressionParserRuleCall_2_0ElementType());

	public static final IGrammarAwareElementType Atrib_SemicolonKeyword_3_ELEMENT_TYPE = associate(AtribFactory.createAtrib_SemicolonKeyword_3ElementType());

	private static class ExpressionFactory {
		public static IGrammarAwareElementType createExpressionElementType() {
			return new IGrammarAwareElementType("Expression_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getExpressionRule());
		}
		public static IGrammarAwareElementType createExpression_AlternativesElementType() {
			return new IGrammarAwareElementType("Expression_Alternatives_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getExpressionAccess().getAlternatives());
		}
		public static IGrammarAwareElementType createExpression_Arit_expressionParserRuleCall_0ElementType() {
			return new IGrammarAwareElementType("Expression_Arit_expressionParserRuleCall_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getExpressionAccess().getArit_expressionParserRuleCall_0());
		}
		public static IGrammarAwareElementType createExpression_Rel_expressionParserRuleCall_1ElementType() {
			return new IGrammarAwareElementType("Expression_Rel_expressionParserRuleCall_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getExpressionAccess().getRel_expressionParserRuleCall_1());
		}
	}

	public static final IGrammarAwareElementType Expression_ELEMENT_TYPE = associate(ExpressionFactory.createExpressionElementType());

	public static final IGrammarAwareElementType Expression_Alternatives_ELEMENT_TYPE = associate(ExpressionFactory.createExpression_AlternativesElementType());

	public static final IGrammarAwareElementType Expression_Arit_expressionParserRuleCall_0_ELEMENT_TYPE = associate(ExpressionFactory.createExpression_Arit_expressionParserRuleCall_0ElementType());

	public static final IGrammarAwareElementType Expression_Rel_expressionParserRuleCall_1_ELEMENT_TYPE = associate(ExpressionFactory.createExpression_Rel_expressionParserRuleCall_1ElementType());

	private static class Arit_expressionFactory {
		public static IGrammarAwareElementType createArit_expressionElementType() {
			return new IGrammarAwareElementType("Arit_expression_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_expressionRule());
		}
		public static IGrammarAwareElementType createArit_expression_GroupElementType() {
			return new IGrammarAwareElementType("Arit_expression_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_expressionAccess().getGroup());
		}
		public static IGrammarAwareElementType createArit_expression_ValueAssignment_0ElementType() {
			return new IGrammarAwareElementType("Arit_expression_ValueAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_expressionAccess().getValueAssignment_0());
		}
		public static IGrammarAwareElementType createArit_expression_ValueSome_valueParserRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Arit_expression_ValueSome_valueParserRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_expressionAccess().getValueSome_valueParserRuleCall_0_0());
		}
		public static IGrammarAwareElementType createArit_expression_ExpAssignment_1ElementType() {
			return new IGrammarAwareElementType("Arit_expression_ExpAssignment_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_expressionAccess().getExpAssignment_1());
		}
		public static IGrammarAwareElementType createArit_expression_ExpRepetitive_arit_expressionParserRuleCall_1_0ElementType() {
			return new IGrammarAwareElementType("Arit_expression_ExpRepetitive_arit_expressionParserRuleCall_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_expressionAccess().getExpRepetitive_arit_expressionParserRuleCall_1_0());
		}
	}

	public static final IGrammarAwareElementType Arit_expression_ELEMENT_TYPE = associate(Arit_expressionFactory.createArit_expressionElementType());

	public static final IGrammarAwareElementType Arit_expression_Group_ELEMENT_TYPE = associate(Arit_expressionFactory.createArit_expression_GroupElementType());

	public static final IGrammarAwareElementType Arit_expression_ValueAssignment_0_ELEMENT_TYPE = associate(Arit_expressionFactory.createArit_expression_ValueAssignment_0ElementType());

	public static final IGrammarAwareElementType Arit_expression_ValueSome_valueParserRuleCall_0_0_ELEMENT_TYPE = associate(Arit_expressionFactory.createArit_expression_ValueSome_valueParserRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Arit_expression_ExpAssignment_1_ELEMENT_TYPE = associate(Arit_expressionFactory.createArit_expression_ExpAssignment_1ElementType());

	public static final IGrammarAwareElementType Arit_expression_ExpRepetitive_arit_expressionParserRuleCall_1_0_ELEMENT_TYPE = associate(Arit_expressionFactory.createArit_expression_ExpRepetitive_arit_expressionParserRuleCall_1_0ElementType());

	private static class Repetitive_arit_expressionFactory {
		public static IGrammarAwareElementType createRepetitive_arit_expressionElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionRule());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_GroupElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getGroup());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_OpAssignment_0ElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_OpAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getOpAssignment_0());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_OpArit_opParserRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_OpArit_opParserRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getOpArit_opParserRuleCall_0_0());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_ValueAssignment_1ElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_ValueAssignment_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getValueAssignment_1());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_ValueSome_valueParserRuleCall_1_0ElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_ValueSome_valueParserRuleCall_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getValueSome_valueParserRuleCall_1_0());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_ExpAssignment_2ElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_ExpAssignment_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getExpAssignment_2());
		}
		public static IGrammarAwareElementType createRepetitive_arit_expression_ExpRepetitive_arit_expressionParserRuleCall_2_0ElementType() {
			return new IGrammarAwareElementType("Repetitive_arit_expression_ExpRepetitive_arit_expressionParserRuleCall_2_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRepetitive_arit_expressionAccess().getExpRepetitive_arit_expressionParserRuleCall_2_0());
		}
	}

	public static final IGrammarAwareElementType Repetitive_arit_expression_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expressionElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_Group_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_GroupElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_OpAssignment_0_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_OpAssignment_0ElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_OpArit_opParserRuleCall_0_0_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_OpArit_opParserRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_ValueAssignment_1_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_ValueAssignment_1ElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_ValueSome_valueParserRuleCall_1_0_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_ValueSome_valueParserRuleCall_1_0ElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_ExpAssignment_2_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_ExpAssignment_2ElementType());

	public static final IGrammarAwareElementType Repetitive_arit_expression_ExpRepetitive_arit_expressionParserRuleCall_2_0_ELEMENT_TYPE = associate(Repetitive_arit_expressionFactory.createRepetitive_arit_expression_ExpRepetitive_arit_expressionParserRuleCall_2_0ElementType());

	private static class Rel_expressionFactory {
		public static IGrammarAwareElementType createRel_expressionElementType() {
			return new IGrammarAwareElementType("Rel_expression_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionRule());
		}
		public static IGrammarAwareElementType createRel_expression_GroupElementType() {
			return new IGrammarAwareElementType("Rel_expression_Group_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getGroup());
		}
		public static IGrammarAwareElementType createRel_expression_OpenAssignment_0ElementType() {
			return new IGrammarAwareElementType("Rel_expression_OpenAssignment_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getOpenAssignment_0());
		}
		public static IGrammarAwareElementType createRel_expression_OpenOpen_parParserRuleCall_0_0ElementType() {
			return new IGrammarAwareElementType("Rel_expression_OpenOpen_parParserRuleCall_0_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getOpenOpen_parParserRuleCall_0_0());
		}
		public static IGrammarAwareElementType createRel_expression_FirstAssignment_1ElementType() {
			return new IGrammarAwareElementType("Rel_expression_FirstAssignment_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getFirstAssignment_1());
		}
		public static IGrammarAwareElementType createRel_expression_FirstSome_valueParserRuleCall_1_0ElementType() {
			return new IGrammarAwareElementType("Rel_expression_FirstSome_valueParserRuleCall_1_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getFirstSome_valueParserRuleCall_1_0());
		}
		public static IGrammarAwareElementType createRel_expression_OpAssignment_2ElementType() {
			return new IGrammarAwareElementType("Rel_expression_OpAssignment_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getOpAssignment_2());
		}
		public static IGrammarAwareElementType createRel_expression_OpRel_opParserRuleCall_2_0ElementType() {
			return new IGrammarAwareElementType("Rel_expression_OpRel_opParserRuleCall_2_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getOpRel_opParserRuleCall_2_0());
		}
		public static IGrammarAwareElementType createRel_expression_SecondAssignment_3ElementType() {
			return new IGrammarAwareElementType("Rel_expression_SecondAssignment_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getSecondAssignment_3());
		}
		public static IGrammarAwareElementType createRel_expression_SecondSome_valueParserRuleCall_3_0ElementType() {
			return new IGrammarAwareElementType("Rel_expression_SecondSome_valueParserRuleCall_3_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getSecondSome_valueParserRuleCall_3_0());
		}
		public static IGrammarAwareElementType createRel_expression_CloseAssignment_4ElementType() {
			return new IGrammarAwareElementType("Rel_expression_CloseAssignment_4_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getCloseAssignment_4());
		}
		public static IGrammarAwareElementType createRel_expression_CloseClose_parParserRuleCall_4_0ElementType() {
			return new IGrammarAwareElementType("Rel_expression_CloseClose_parParserRuleCall_4_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_expressionAccess().getCloseClose_parParserRuleCall_4_0());
		}
	}

	public static final IGrammarAwareElementType Rel_expression_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expressionElementType());

	public static final IGrammarAwareElementType Rel_expression_Group_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_GroupElementType());

	public static final IGrammarAwareElementType Rel_expression_OpenAssignment_0_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_OpenAssignment_0ElementType());

	public static final IGrammarAwareElementType Rel_expression_OpenOpen_parParserRuleCall_0_0_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_OpenOpen_parParserRuleCall_0_0ElementType());

	public static final IGrammarAwareElementType Rel_expression_FirstAssignment_1_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_FirstAssignment_1ElementType());

	public static final IGrammarAwareElementType Rel_expression_FirstSome_valueParserRuleCall_1_0_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_FirstSome_valueParserRuleCall_1_0ElementType());

	public static final IGrammarAwareElementType Rel_expression_OpAssignment_2_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_OpAssignment_2ElementType());

	public static final IGrammarAwareElementType Rel_expression_OpRel_opParserRuleCall_2_0_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_OpRel_opParserRuleCall_2_0ElementType());

	public static final IGrammarAwareElementType Rel_expression_SecondAssignment_3_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_SecondAssignment_3ElementType());

	public static final IGrammarAwareElementType Rel_expression_SecondSome_valueParserRuleCall_3_0_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_SecondSome_valueParserRuleCall_3_0ElementType());

	public static final IGrammarAwareElementType Rel_expression_CloseAssignment_4_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_CloseAssignment_4ElementType());

	public static final IGrammarAwareElementType Rel_expression_CloseClose_parParserRuleCall_4_0_ELEMENT_TYPE = associate(Rel_expressionFactory.createRel_expression_CloseClose_parParserRuleCall_4_0ElementType());

	private static class Arit_opFactory {
		public static IGrammarAwareElementType createArit_opElementType() {
			return new IGrammarAwareElementType("Arit_op_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opRule());
		}
		public static IGrammarAwareElementType createArit_op_AlternativesElementType() {
			return new IGrammarAwareElementType("Arit_op_Alternatives_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opAccess().getAlternatives());
		}
		public static IGrammarAwareElementType createArit_op_PlusSignKeyword_0ElementType() {
			return new IGrammarAwareElementType("Arit_op_PlusSignKeyword_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opAccess().getPlusSignKeyword_0());
		}
		public static IGrammarAwareElementType createArit_op_HyphenMinusKeyword_1ElementType() {
			return new IGrammarAwareElementType("Arit_op_HyphenMinusKeyword_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opAccess().getHyphenMinusKeyword_1());
		}
		public static IGrammarAwareElementType createArit_op_AsteriskKeyword_2ElementType() {
			return new IGrammarAwareElementType("Arit_op_AsteriskKeyword_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opAccess().getAsteriskKeyword_2());
		}
		public static IGrammarAwareElementType createArit_op_DivKeyword_3ElementType() {
			return new IGrammarAwareElementType("Arit_op_DivKeyword_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opAccess().getDivKeyword_3());
		}
		public static IGrammarAwareElementType createArit_op_ModKeyword_4ElementType() {
			return new IGrammarAwareElementType("Arit_op_ModKeyword_4_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getArit_opAccess().getModKeyword_4());
		}
	}

	public static final IGrammarAwareElementType Arit_op_ELEMENT_TYPE = associate(Arit_opFactory.createArit_opElementType());

	public static final IGrammarAwareElementType Arit_op_Alternatives_ELEMENT_TYPE = associate(Arit_opFactory.createArit_op_AlternativesElementType());

	public static final IGrammarAwareElementType Arit_op_PlusSignKeyword_0_ELEMENT_TYPE = associate(Arit_opFactory.createArit_op_PlusSignKeyword_0ElementType());

	public static final IGrammarAwareElementType Arit_op_HyphenMinusKeyword_1_ELEMENT_TYPE = associate(Arit_opFactory.createArit_op_HyphenMinusKeyword_1ElementType());

	public static final IGrammarAwareElementType Arit_op_AsteriskKeyword_2_ELEMENT_TYPE = associate(Arit_opFactory.createArit_op_AsteriskKeyword_2ElementType());

	public static final IGrammarAwareElementType Arit_op_DivKeyword_3_ELEMENT_TYPE = associate(Arit_opFactory.createArit_op_DivKeyword_3ElementType());

	public static final IGrammarAwareElementType Arit_op_ModKeyword_4_ELEMENT_TYPE = associate(Arit_opFactory.createArit_op_ModKeyword_4ElementType());

	private static class Rel_opFactory {
		public static IGrammarAwareElementType createRel_opElementType() {
			return new IGrammarAwareElementType("Rel_op_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_opRule());
		}
		public static IGrammarAwareElementType createRel_op_AlternativesElementType() {
			return new IGrammarAwareElementType("Rel_op_Alternatives_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_opAccess().getAlternatives());
		}
		public static IGrammarAwareElementType createRel_op_GreaterThanSignKeyword_0ElementType() {
			return new IGrammarAwareElementType("Rel_op_GreaterThanSignKeyword_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_opAccess().getGreaterThanSignKeyword_0());
		}
		public static IGrammarAwareElementType createRel_op_LessThanSignKeyword_1ElementType() {
			return new IGrammarAwareElementType("Rel_op_LessThanSignKeyword_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_opAccess().getLessThanSignKeyword_1());
		}
		public static IGrammarAwareElementType createRel_op_GreaterThanSignEqualsSignKeyword_2ElementType() {
			return new IGrammarAwareElementType("Rel_op_GreaterThanSignEqualsSignKeyword_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_opAccess().getGreaterThanSignEqualsSignKeyword_2());
		}
		public static IGrammarAwareElementType createRel_op_LessThanSignEqualsSignKeyword_3ElementType() {
			return new IGrammarAwareElementType("Rel_op_LessThanSignEqualsSignKeyword_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getRel_opAccess().getLessThanSignEqualsSignKeyword_3());
		}
	}

	public static final IGrammarAwareElementType Rel_op_ELEMENT_TYPE = associate(Rel_opFactory.createRel_opElementType());

	public static final IGrammarAwareElementType Rel_op_Alternatives_ELEMENT_TYPE = associate(Rel_opFactory.createRel_op_AlternativesElementType());

	public static final IGrammarAwareElementType Rel_op_GreaterThanSignKeyword_0_ELEMENT_TYPE = associate(Rel_opFactory.createRel_op_GreaterThanSignKeyword_0ElementType());

	public static final IGrammarAwareElementType Rel_op_LessThanSignKeyword_1_ELEMENT_TYPE = associate(Rel_opFactory.createRel_op_LessThanSignKeyword_1ElementType());

	public static final IGrammarAwareElementType Rel_op_GreaterThanSignEqualsSignKeyword_2_ELEMENT_TYPE = associate(Rel_opFactory.createRel_op_GreaterThanSignEqualsSignKeyword_2ElementType());

	public static final IGrammarAwareElementType Rel_op_LessThanSignEqualsSignKeyword_3_ELEMENT_TYPE = associate(Rel_opFactory.createRel_op_LessThanSignEqualsSignKeyword_3ElementType());

	private static class Bool_opFactory {
		public static IGrammarAwareElementType createBool_opElementType() {
			return new IGrammarAwareElementType("Bool_op_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBool_opRule());
		}
		public static IGrammarAwareElementType createBool_op_AlternativesElementType() {
			return new IGrammarAwareElementType("Bool_op_Alternatives_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBool_opAccess().getAlternatives());
		}
		public static IGrammarAwareElementType createBool_op_EqualsSignKeyword_0ElementType() {
			return new IGrammarAwareElementType("Bool_op_EqualsSignKeyword_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBool_opAccess().getEqualsSignKeyword_0());
		}
		public static IGrammarAwareElementType createBool_op_LessThanSignGreaterThanSignKeyword_1ElementType() {
			return new IGrammarAwareElementType("Bool_op_LessThanSignGreaterThanSignKeyword_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getBool_opAccess().getLessThanSignGreaterThanSignKeyword_1());
		}
	}

	public static final IGrammarAwareElementType Bool_op_ELEMENT_TYPE = associate(Bool_opFactory.createBool_opElementType());

	public static final IGrammarAwareElementType Bool_op_Alternatives_ELEMENT_TYPE = associate(Bool_opFactory.createBool_op_AlternativesElementType());

	public static final IGrammarAwareElementType Bool_op_EqualsSignKeyword_0_ELEMENT_TYPE = associate(Bool_opFactory.createBool_op_EqualsSignKeyword_0ElementType());

	public static final IGrammarAwareElementType Bool_op_LessThanSignGreaterThanSignKeyword_1_ELEMENT_TYPE = associate(Bool_opFactory.createBool_op_LessThanSignGreaterThanSignKeyword_1ElementType());

	private static class Some_valueFactory {
		public static IGrammarAwareElementType createSome_valueElementType() {
			return new IGrammarAwareElementType("Some_value_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getSome_valueRule());
		}
		public static IGrammarAwareElementType createSome_value_AlternativesElementType() {
			return new IGrammarAwareElementType("Some_value_Alternatives_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getSome_valueAccess().getAlternatives());
		}
		public static IGrammarAwareElementType createSome_value_IDTerminalRuleCall_0ElementType() {
			return new IGrammarAwareElementType("Some_value_IDTerminalRuleCall_0_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getSome_valueAccess().getIDTerminalRuleCall_0());
		}
		public static IGrammarAwareElementType createSome_value_INTTerminalRuleCall_1ElementType() {
			return new IGrammarAwareElementType("Some_value_INTTerminalRuleCall_1_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getSome_valueAccess().getINTTerminalRuleCall_1());
		}
		public static IGrammarAwareElementType createSome_value_STRINGTerminalRuleCall_2ElementType() {
			return new IGrammarAwareElementType("Some_value_STRINGTerminalRuleCall_2_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getSome_valueAccess().getSTRINGTerminalRuleCall_2());
		}
		public static IGrammarAwareElementType createSome_value_BOOLEANTerminalRuleCall_3ElementType() {
			return new IGrammarAwareElementType("Some_value_BOOLEANTerminalRuleCall_3_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getSome_valueAccess().getBOOLEANTerminalRuleCall_3());
		}
	}

	public static final IGrammarAwareElementType Some_value_ELEMENT_TYPE = associate(Some_valueFactory.createSome_valueElementType());

	public static final IGrammarAwareElementType Some_value_Alternatives_ELEMENT_TYPE = associate(Some_valueFactory.createSome_value_AlternativesElementType());

	public static final IGrammarAwareElementType Some_value_IDTerminalRuleCall_0_ELEMENT_TYPE = associate(Some_valueFactory.createSome_value_IDTerminalRuleCall_0ElementType());

	public static final IGrammarAwareElementType Some_value_INTTerminalRuleCall_1_ELEMENT_TYPE = associate(Some_valueFactory.createSome_value_INTTerminalRuleCall_1ElementType());

	public static final IGrammarAwareElementType Some_value_STRINGTerminalRuleCall_2_ELEMENT_TYPE = associate(Some_valueFactory.createSome_value_STRINGTerminalRuleCall_2ElementType());

	public static final IGrammarAwareElementType Some_value_BOOLEANTerminalRuleCall_3_ELEMENT_TYPE = associate(Some_valueFactory.createSome_value_BOOLEANTerminalRuleCall_3ElementType());

	private static class Open_parFactory {
		public static IGrammarAwareElementType createOpen_parElementType() {
			return new IGrammarAwareElementType("Open_par_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getOpen_parRule());
		}
		public static IGrammarAwareElementType createOpen_par_LeftParenthesisKeywordElementType() {
			return new IGrammarAwareElementType("Open_par_LeftParenthesisKeyword_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getOpen_parAccess().getLeftParenthesisKeyword());
		}
	}

	public static final IGrammarAwareElementType Open_par_ELEMENT_TYPE = associate(Open_parFactory.createOpen_parElementType());

	public static final IGrammarAwareElementType Open_par_LeftParenthesisKeyword_ELEMENT_TYPE = associate(Open_parFactory.createOpen_par_LeftParenthesisKeywordElementType());

	private static class Close_parFactory {
		public static IGrammarAwareElementType createClose_parElementType() {
			return new IGrammarAwareElementType("Close_par_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getClose_parRule());
		}
		public static IGrammarAwareElementType createClose_par_RightParenthesisKeywordElementType() {
			return new IGrammarAwareElementType("Close_par_RightParenthesisKeyword_ELEMENT_TYPE", PascalLanguage.INSTANCE, GRAMMAR_ACCESS.getClose_parAccess().getRightParenthesisKeyword());
		}
	}

	public static final IGrammarAwareElementType Close_par_ELEMENT_TYPE = associate(Close_parFactory.createClose_parElementType());

	public static final IGrammarAwareElementType Close_par_RightParenthesisKeyword_ELEMENT_TYPE = associate(Close_parFactory.createClose_par_RightParenthesisKeywordElementType());

	@Override
	public IFileElementType getFileType() {
		return FILE_TYPE;
	}

	@Override
	public IGrammarAwareElementType findElementType(EObject grammarElement) {
		return GRAMMAR_ELEMENT_TYPE.get(grammarElement);
	}
	
	public IGrammarAwareElementType getPascalElementType() {
		return Pascal_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_GroupElementType() {
		return Pascal_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_HeadAssignment_0ElementType() {
		return Pascal_HeadAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_HeadProgramParserRuleCall_0_0ElementType() {
		return Pascal_HeadProgramParserRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_DeclarationsAssignment_1ElementType() {
		return Pascal_DeclarationsAssignment_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_DeclarationsVar_blockParserRuleCall_1_0ElementType() {
		return Pascal_DeclarationsVar_blockParserRuleCall_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_ScopeAssignment_2ElementType() {
		return Pascal_ScopeAssignment_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getPascal_ScopeBlockParserRuleCall_2_0ElementType() {
		return Pascal_ScopeBlockParserRuleCall_2_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getProgramElementType() {
		return Program_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getProgram_GroupElementType() {
		return Program_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getProgram_ProgramKeyword_0ElementType() {
		return Program_ProgramKeyword_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getProgram_NameAssignment_1ElementType() {
		return Program_NameAssignment_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getProgram_NameIDTerminalRuleCall_1_0ElementType() {
		return Program_NameIDTerminalRuleCall_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getProgram_SemicolonKeyword_2ElementType() {
		return Program_SemicolonKeyword_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_blockElementType() {
		return Var_block_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_GroupElementType() {
		return Var_block_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_VarKeyword_0ElementType() {
		return Var_block_VarKeyword_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_Alternatives_1ElementType() {
		return Var_block_Alternatives_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_Var_statementsAssignment_1_0ElementType() {
		return Var_block_Var_statementsAssignment_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_Var_statementsVar_declParserRuleCall_1_0_0ElementType() {
		return Var_block_Var_statementsVar_declParserRuleCall_1_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_Var_statementsAssignment_1_1ElementType() {
		return Var_block_Var_statementsAssignment_1_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_block_Var_statementsVar_listParserRuleCall_1_1_0ElementType() {
		return Var_block_Var_statementsVar_listParserRuleCall_1_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_declElementType() {
		return Var_decl_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_GroupElementType() {
		return Var_decl_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_Var_idAssignment_0ElementType() {
		return Var_decl_Var_idAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_Var_idIDTerminalRuleCall_0_0ElementType() {
		return Var_decl_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_ColonKeyword_1ElementType() {
		return Var_decl_ColonKeyword_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_Var_typeAssignment_2ElementType() {
		return Var_decl_Var_typeAssignment_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_Var_typeTypeEnumRuleCall_2_0ElementType() {
		return Var_decl_Var_typeTypeEnumRuleCall_2_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_Group_3ElementType() {
		return Var_decl_Group_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_EqualsSignKeyword_3_0ElementType() {
		return Var_decl_EqualsSignKeyword_3_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_ValueAssignment_3_1ElementType() {
		return Var_decl_ValueAssignment_3_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_ValueSome_valueParserRuleCall_3_1_0ElementType() {
		return Var_decl_ValueSome_valueParserRuleCall_3_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_decl_SemicolonKeyword_4ElementType() {
		return Var_decl_SemicolonKeyword_4_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_listElementType() {
		return Var_list_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_GroupElementType() {
		return Var_list_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Var_idAssignment_0ElementType() {
		return Var_list_Var_idAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Var_idIDTerminalRuleCall_0_0ElementType() {
		return Var_list_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Group_1ElementType() {
		return Var_list_Group_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_CommaKeyword_1_0ElementType() {
		return Var_list_CommaKeyword_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Var_idsAssignment_1_1ElementType() {
		return Var_list_Var_idsAssignment_1_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Var_idsIDTerminalRuleCall_1_1_0ElementType() {
		return Var_list_Var_idsIDTerminalRuleCall_1_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_ColonKeyword_2ElementType() {
		return Var_list_ColonKeyword_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Var_typeAssignment_3ElementType() {
		return Var_list_Var_typeAssignment_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_Var_typeTypeEnumRuleCall_3_0ElementType() {
		return Var_list_Var_typeTypeEnumRuleCall_3_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getVar_list_SemicolonKeyword_4ElementType() {
		return Var_list_SemicolonKeyword_4_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getTypeElementType() {
		return Type_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_AlternativesElementType() {
		return Type_Alternatives_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_BOOLEANEnumLiteralDeclaration_0ElementType() {
		return Type_BOOLEANEnumLiteralDeclaration_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_BOOLEANBooleanKeyword_0_0ElementType() {
		return Type_BOOLEANBooleanKeyword_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_INTEGEREnumLiteralDeclaration_1ElementType() {
		return Type_INTEGEREnumLiteralDeclaration_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_INTEGERIntegerKeyword_1_0ElementType() {
		return Type_INTEGERIntegerKeyword_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_STRINGEnumLiteralDeclaration_2ElementType() {
		return Type_STRINGEnumLiteralDeclaration_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getType_STRINGStringKeyword_2_0ElementType() {
		return Type_STRINGStringKeyword_2_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlockElementType() {
		return Block_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlock_GroupElementType() {
		return Block_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlock_BeginKeyword_0ElementType() {
		return Block_BeginKeyword_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlock_StatementsAssignment_1ElementType() {
		return Block_StatementsAssignment_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlock_StatementsStatementParserRuleCall_1_0ElementType() {
		return Block_StatementsStatementParserRuleCall_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlock_EndKeyword_2ElementType() {
		return Block_EndKeyword_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBlock_FullStopKeyword_3ElementType() {
		return Block_FullStopKeyword_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getStatementElementType() {
		return Statement_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getStatement_Atrib_blockAssignmentElementType() {
		return Statement_Atrib_blockAssignment_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getStatement_Atrib_blockAtribParserRuleCall_0ElementType() {
		return Statement_Atrib_blockAtribParserRuleCall_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtribElementType() {
		return Atrib_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_GroupElementType() {
		return Atrib_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_Var_idAssignment_0ElementType() {
		return Atrib_Var_idAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_Var_idIDTerminalRuleCall_0_0ElementType() {
		return Atrib_Var_idIDTerminalRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_ColonEqualsSignKeyword_1ElementType() {
		return Atrib_ColonEqualsSignKeyword_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_ExpAssignment_2ElementType() {
		return Atrib_ExpAssignment_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_ExpExpressionParserRuleCall_2_0ElementType() {
		return Atrib_ExpExpressionParserRuleCall_2_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getAtrib_SemicolonKeyword_3ElementType() {
		return Atrib_SemicolonKeyword_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getExpressionElementType() {
		return Expression_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getExpression_AlternativesElementType() {
		return Expression_Alternatives_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getExpression_Arit_expressionParserRuleCall_0ElementType() {
		return Expression_Arit_expressionParserRuleCall_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getExpression_Rel_expressionParserRuleCall_1ElementType() {
		return Expression_Rel_expressionParserRuleCall_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_expressionElementType() {
		return Arit_expression_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_expression_GroupElementType() {
		return Arit_expression_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_expression_ValueAssignment_0ElementType() {
		return Arit_expression_ValueAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_expression_ValueSome_valueParserRuleCall_0_0ElementType() {
		return Arit_expression_ValueSome_valueParserRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_expression_ExpAssignment_1ElementType() {
		return Arit_expression_ExpAssignment_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_expression_ExpRepetitive_arit_expressionParserRuleCall_1_0ElementType() {
		return Arit_expression_ExpRepetitive_arit_expressionParserRuleCall_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expressionElementType() {
		return Repetitive_arit_expression_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_GroupElementType() {
		return Repetitive_arit_expression_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_OpAssignment_0ElementType() {
		return Repetitive_arit_expression_OpAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_OpArit_opParserRuleCall_0_0ElementType() {
		return Repetitive_arit_expression_OpArit_opParserRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_ValueAssignment_1ElementType() {
		return Repetitive_arit_expression_ValueAssignment_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_ValueSome_valueParserRuleCall_1_0ElementType() {
		return Repetitive_arit_expression_ValueSome_valueParserRuleCall_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_ExpAssignment_2ElementType() {
		return Repetitive_arit_expression_ExpAssignment_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRepetitive_arit_expression_ExpRepetitive_arit_expressionParserRuleCall_2_0ElementType() {
		return Repetitive_arit_expression_ExpRepetitive_arit_expressionParserRuleCall_2_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expressionElementType() {
		return Rel_expression_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_GroupElementType() {
		return Rel_expression_Group_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_OpenAssignment_0ElementType() {
		return Rel_expression_OpenAssignment_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_OpenOpen_parParserRuleCall_0_0ElementType() {
		return Rel_expression_OpenOpen_parParserRuleCall_0_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_FirstAssignment_1ElementType() {
		return Rel_expression_FirstAssignment_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_FirstSome_valueParserRuleCall_1_0ElementType() {
		return Rel_expression_FirstSome_valueParserRuleCall_1_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_OpAssignment_2ElementType() {
		return Rel_expression_OpAssignment_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_OpRel_opParserRuleCall_2_0ElementType() {
		return Rel_expression_OpRel_opParserRuleCall_2_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_SecondAssignment_3ElementType() {
		return Rel_expression_SecondAssignment_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_SecondSome_valueParserRuleCall_3_0ElementType() {
		return Rel_expression_SecondSome_valueParserRuleCall_3_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_CloseAssignment_4ElementType() {
		return Rel_expression_CloseAssignment_4_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_expression_CloseClose_parParserRuleCall_4_0ElementType() {
		return Rel_expression_CloseClose_parParserRuleCall_4_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_opElementType() {
		return Arit_op_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_op_AlternativesElementType() {
		return Arit_op_Alternatives_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_op_PlusSignKeyword_0ElementType() {
		return Arit_op_PlusSignKeyword_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_op_HyphenMinusKeyword_1ElementType() {
		return Arit_op_HyphenMinusKeyword_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_op_AsteriskKeyword_2ElementType() {
		return Arit_op_AsteriskKeyword_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_op_DivKeyword_3ElementType() {
		return Arit_op_DivKeyword_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getArit_op_ModKeyword_4ElementType() {
		return Arit_op_ModKeyword_4_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_opElementType() {
		return Rel_op_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_op_AlternativesElementType() {
		return Rel_op_Alternatives_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_op_GreaterThanSignKeyword_0ElementType() {
		return Rel_op_GreaterThanSignKeyword_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_op_LessThanSignKeyword_1ElementType() {
		return Rel_op_LessThanSignKeyword_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_op_GreaterThanSignEqualsSignKeyword_2ElementType() {
		return Rel_op_GreaterThanSignEqualsSignKeyword_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getRel_op_LessThanSignEqualsSignKeyword_3ElementType() {
		return Rel_op_LessThanSignEqualsSignKeyword_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBool_opElementType() {
		return Bool_op_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBool_op_AlternativesElementType() {
		return Bool_op_Alternatives_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBool_op_EqualsSignKeyword_0ElementType() {
		return Bool_op_EqualsSignKeyword_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getBool_op_LessThanSignGreaterThanSignKeyword_1ElementType() {
		return Bool_op_LessThanSignGreaterThanSignKeyword_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getSome_valueElementType() {
		return Some_value_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getSome_value_AlternativesElementType() {
		return Some_value_Alternatives_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getSome_value_IDTerminalRuleCall_0ElementType() {
		return Some_value_IDTerminalRuleCall_0_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getSome_value_INTTerminalRuleCall_1ElementType() {
		return Some_value_INTTerminalRuleCall_1_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getSome_value_STRINGTerminalRuleCall_2ElementType() {
		return Some_value_STRINGTerminalRuleCall_2_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getSome_value_BOOLEANTerminalRuleCall_3ElementType() {
		return Some_value_BOOLEANTerminalRuleCall_3_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getOpen_parElementType() {
		return Open_par_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getOpen_par_LeftParenthesisKeywordElementType() {
		return Open_par_LeftParenthesisKeyword_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getClose_parElementType() {
		return Close_par_ELEMENT_TYPE;
	}
	
	public IGrammarAwareElementType getClose_par_RightParenthesisKeywordElementType() {
		return Close_par_RightParenthesisKeyword_ELEMENT_TYPE;
	}

}
